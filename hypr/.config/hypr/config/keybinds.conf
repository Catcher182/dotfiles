# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER


# Misc
# =================================================================================
bind = $mainMod, W, killactive,
bind = $mainMod SHIFT, W, exec, hyprctl kill
bind = $mainMod SHIFT, Q, exit,
bind = $mainMod, M, fullscreen, 1
bind = $mainMod SHIFT, M, fullscreen, 0
bind = $mainMod, F, workspaceopt, allfloat
bind = $mainMod SHIFT, P, pin,
bind = ALT, Tab, cyclenext,
bind = ALT SHIFT, Tab, swapnext,
bind = ALT, Tab, alterzorder, top  # bring it to the top
bind = $mainMod, C, swapnext,

bind = ALT, grave, exec, pkill rofi || rofi -show window
bind = $mainMod, Tab, workspace, previous
bind = $mainMod, grave, exec, hyprctl dispatch hyprexpo:expo toggle
bind = $mainMod SHIFT, grave, exec, hyprctl dispatch hyprexpo:expo toggle
bind = $mainMod CTRL, grave, exec, hyprctl dispatch hyprexpo:expo toggle

bind = $mainMod, B, exec, pypr expose
bind = $mainMod SHIFT, B, exec, pkill rofi || pypr fetch_client_menu

bind = $mainMod SHIFT, X, exec, hyprlock
# trigger when the switch is toggled
bindl=,switch:[switch name],exec,hyprlock


# App launch
# bindr = SUPER, SUPER_L, exec, pkill rofi || ~/.config/rofi/scripts/rofi-desktop.sh -a
bind = $mainMod, Return, exec, wezterm
# bind = $mainMod, Return, exec, konsole
bind = $mainMod SHIFT, Return, exec, wezterm start --class wezterm-float
bind = $mainMod, E, exec, [float;size 45% 55%] dolphin
# bind = ALT, space, exec, utools
bind = ALT, space, exec, pkill rofi || rofi -show drun
bind = $mainMod CTRL, space, exec, pkill rofi || ~/.config/rofi/scripts/rofi-desktop.sh -a
# bind = ALT, space, exec, pkill rofi || rofi -show drun
# bind = CTRL,space, exec, pkill rofi || rofi -show mytools -modi "mytools:~/.config/rofi/scripts/Mytools.sh"
bind = $mainMod, V, exec, pkill rofi || cliphist list | rofi -dmenu | cliphist decode | wl-copy
bind = $mainMod SHIFT, F4, exec, pkill rofi || ~/.config/rofi/scripts/powermenu.sh

# Screenshot
bind = CTRL, Print, exec, pkill rofi || ~/.config/rofi/scripts/screenshot.sh
bind = ,Print, exec, grimblast --notify copy area
bind = SHIFT, Print, exec, grimblast --notify copysave area
bind = ALT, Print, exec, flameshot gui
bind = $mainMod, Print, exec, grimblast --notify copysave area
bind = CTRL&SHIFT, Print, exec, Snipaste snip
bind = $mainMod SHIFT, Print, exec, rm ~/.cache/com.pot-app.desktop/pot_screenshot_cut.png >/dev/null ;grim -g "$(slurp)" ~/.cache/com.pot-app.desktop/pot_screenshot_cut.png && curl "127.0.0.1:60828/ocr_recognize?screenshot=false" >/dev/null
bind = ALT, C, exec, curl "127.0.0.1:60828/selection_translate"
# bind = ALT, C, exec, qdbus org.kde.CrowTranslate /org/kde/CrowTranslate/MainWindow translateSelection


# Global Keybinds
bind = $mainMod, F10, pass, ^(com\.obsproject\.Studio)$
bind = $mainMod, F11, pass, ^(com\.obsproject\.Studio)$


# Mouse
bind = $mainMod SHIFT, mouse:272, global, kando:main
binde = $mainMod ALT, mouse_up, exec, ~/.config/hypr/scripts/hypr-alpha.sh -0.1
binde = $mainMod ALT, mouse_down, exec, ~/.config/hypr/scripts/hypr-alpha.sh 0.1
binde = $mainMod SHIFT, mouse_up, exec, pypr zoom --0.1
binde = $mainMod SHIFT, mouse_down, exec, pypr zoom ++0.1
bind = $mainMod SHIFT, mouse:273, exec, ~/.config/hypr/scripts/scratchpadRestore.sh

binde = $mainMod SHIFT, code:20, exec, ~/.config/hypr/scripts/hypr-alpha.sh -0.2
binde = $mainMod SHIFT, code:21, exec, ~/.config/hypr/scripts/hypr-alpha.sh 0.2
binde = $mainMod, code:20, exec, pypr zoom --0.1
binde = $mainMod, code:21, exec, pypr zoom ++0.1



bindel = ,XF86AudioRaiseVolume, exec, pamixer -ui 5  && pamixer --get-volume > $XDG_RUNTIME_DIR/wob.sock
bindel = ,XF86AudioLowerVolume, exec, pamixer -ud 5 && pamixer --get-volume > $XDG_RUNTIME_DIR/wob.sock
bindl = ,XF86AudioMute, exec, pamixer -t && ( [ "$(pamixer --get-mute)" = "true" ] && echo 0 > $XDG_RUNTIME_DIR/wob.sock) || pamixer --get-volume > $XDG_RUNTIME_DIR/wob.sock
bind = ,XF86AudioMicMute, exec, pamixer --default-source -t
bindel = ,XF86MonBrightnessUp, exec, light -A 10  && light -G | cut -d'.' -f1 > $XDG_RUNTIME_DIR/wob.sock
bindel = ,XF86MonBrightnessDown, exec, light -U 10 && light -G | cut -d'.' -f1 > $XDG_RUNTIME_DIR/wob.sock


# Layout
# =================================================================================
bind = $mainMod, space, togglefloating,
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, R, layoutmsg, togglesplit # dwindle
bind = $mainMod SHIFT, R, layoutmsg, swapsplit # dwindle
bind = $mainMod, R, layoutmsg, orientationnext # master
bind = $mainMod SHIFT, R, layoutmsg, orientationprev # master
bind = $mainMod, P, layoutmsg, addmaster # master
bind = $mainMod SHIFT, P, layoutmsg, removemaster # master
bind = $mainMod, code:51 ,exec, ~/.config/hypr/scripts/switchlayout.sh

# Windows
# =================================================================================
# Move focus
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d
bind = $mainMod, H, movefocus, l
bind = $mainMod, L, movefocus, r
bind = $mainMod, K, movefocus, u
bind = $mainMod, J, movefocus, d

# Resize windows
# binde = $mainMod ALT, right, resizeactive, 10 0
# binde = $mainMod ALT, left, resizeactive, -10 0
# binde = $mainMod ALT, up, resizeactive, 0 -10
# binde = $mainMod ALT, down, resizeactive, 0 10
# binde = $mainMod ALT, l, resizeactive, 10 0
# binde = $mainMod ALT, h, resizeactive, -10 0
# binde = $mainMod ALT, k, resizeactive, 0 -10
# binde = $mainMod ALT, j, resizeactive, 0 10

# Resize windows
# binde = $mainMod SHIFT, right, resizeactive, 10 0
# binde = $mainMod SHIFT, left, resizeactive, -10 0
# binde = $mainMod SHIFT, up, resizeactive, 0 -10
# binde = $mainMod SHIFT, down, resizeactive, 0 10
# binde = $mainMod SHIFT, l, resizeactive, 10 0
# binde = $mainMod SHIFT, h, resizeactive, -10 0
# binde = $mainMod SHIFT, k, resizeactive, 0 -10
# binde = $mainMod SHIFT, j, resizeactive, 0 10

binde = $mainMod CTRL, right, resizeactive, 10 0
binde = $mainMod CTRL, left, resizeactive, -10 0
binde = $mainMod CTRL, up, resizeactive, 0 -10
binde = $mainMod CTRL, down, resizeactive, 0 10
binde = $mainMod CTRL, l, resizeactive, 10 0
binde = $mainMod CTRL, h, resizeactive, -10 0
binde = $mainMod CTRL, k, resizeactive, 0 -10
binde = $mainMod CTRL, j, resizeactive, 0 10

# Swapwindow
bind = $mainMod SHIFT, left, swapwindow, l
bind = $mainMod SHIFT, right, swapwindow, r
bind = $mainMod SHIFT, up, swapwindow, u
bind = $mainMod SHIFT, down, swapwindow, d
bind = $mainMod SHIFT, H, swapwindow, l
bind = $mainMod SHIFT, L, swapwindow, r
bind = $mainMod SHIFT, K, swapwindow, u
bind = $mainMod SHIFT, J, swapwindow, d


# moveactive
# binde = $mainMod CTRL, left, moveactive, -10 0
# binde = $mainMod CTRL, right, moveactive, 10 0
# binde = $mainMod CTRL, up, moveactive, 0 -10
# binde = $mainMod CTRL, down, moveactive, 0 10
# binde = $mainMod CTRL, H, moveactive, -10 0
# binde = $mainMod CTRL, L, moveactive, 10 0
# binde = $mainMod CTRL, K, moveactive, 0 -10
# binde = $mainMod CTRL, J, moveactive, 0 10

binde = $mainMod ALT, left, moveactive, -10 0
binde = $mainMod ALT, right, moveactive, 10 0
binde = $mainMod ALT, up, moveactive, 0 -10
binde = $mainMod ALT, down, moveactive, 0 10
binde = $mainMod ALT, H, moveactive, -10 0
binde = $mainMod ALT, L, moveactive, 10 0
binde = $mainMod ALT, K, moveactive, 0 -10
binde = $mainMod ALT, J, moveactive, 0 10


# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

bindm = $mainMod, ALT_L, movewindow
bindm = $mainMod, Control_L, resizewindow

# Workspaces
# =================================================================================
# Switch workspaces
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10
bind = $mainMod, bracketright, workspace, e+1
bind = $mainMod, bracketleft, workspace, e-1
bind = $mainMod, D, workspace, empty
# bind = $mainMod, grave, workspace, previous

# Move active window to a workspace
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10
bind = $mainMod SHIFT, bracketright, movetoworkspace, e+1
bind = $mainMod SHIFT, bracketleft, movetoworkspace, e-1
bind = $mainMod SHIFT, D, movetoworkspace, empty


# Move window to workspace
bind = $mainMod ALT, 1, movetoworkspacesilent, 1
bind = $mainMod ALT, 2, movetoworkspacesilent, 2
bind = $mainMod ALT, 3, movetoworkspacesilent, 3
bind = $mainMod ALT, 4, movetoworkspacesilent, 4
bind = $mainMod ALT, 5, movetoworkspacesilent, 5
bind = $mainMod ALT, 6, movetoworkspacesilent, 6
bind = $mainMod ALT, 7, movetoworkspacesilent, 7
bind = $mainMod ALT, 8, movetoworkspacesilent, 8
bind = $mainMod ALT, 9, movetoworkspacesilent, 9
bind = $mainMod ALT, 0, movetoworkspacesilent, 10
bind = $mainMod ALT, bracketright, movetoworkspacesilent, e+1
bind = $mainMod ALT, bracketleft, movetoworkspacesilent, e-1
bind = $mainMod ALT, D, movetoworkspacesilent, empty


# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1




# SpecialWorkspace
# =================================================================================
bind = $mainMod, S, togglespecialworkspace,
bind = $mainMod SHIFT, S, exec, ~/.config/hypr/scripts/hyprbarmin.sh
# bind = $mainMod SHIFT, S, movetoworkspacesilent, special:myscratchpad
# bind = $mainMod CTRL, S, exec,~/.config/hypr/scripts/scratchpadRestore.sh
bind = $mainMod CTRL, S, togglespecialworkspace,
bind = $mainMod CTRL, S, movetoworkspace, +0

bind = $mainMod, U, exec, ~/.config/hypr/scripts/hyprbarmin.sh
bind = $mainMod SHIFT, U, togglespecialworkspace,
bind = $mainMod SHIFT, U, movetoworkspace, +0


# Group
# =================================================================================
bind = $mainMod, G, togglegroup,
bind = $mainMod , period, changegroupactive, f
bind = $mainMod , comma, changegroupactive, b
bind = $mainMod SHIFT, G, moveoutofgroup,
bind = $mainMod SHIFT CTRL, G, lockactivegroup, toggle



# Submap
# =================================================================================

# will switch to a submap called change
bind = $mainMod SHIFT, code:51, submap,change
submap=change
bind = , P, exec, ~/.config/hypr/scripts/bar-top-bottom.sh
bind = , B, exec, killall -SIGUSR1 waybar
bind = , A, exec, ~/.config/hypr/scripts/hyprbar.sh
bind = , C, exec, ~/.config/hypr/scripts/colorscheme.sh
bind = , l, exec, ~/.config/hypr/scripts/switchlayout.sh
bind = , P, submap,reset
bind = , B, submap,reset
bind = , A, submap,reset
bind = , C, submap,reset
bind = , l, submap,reset
bind=,escape,submap,reset
bind = $mainMod SHIFT, code:51, submap, reset
bind = , catchall, submap, reset
submap = reset


# Dwindle preselect
bind = $mainMod, Y, submap, preselect
submap = preselect
bind = $mainMod, H, layoutmsg, preselect l
bind = $mainMod, L, layoutmsg, preselect r
bind = $mainMod, K, layoutmsg, preselect u
bind = $mainMod, J, layoutmsg, preselect d
bind = $mainMod, H, submap, reset 
bind = $mainMod, L, submap, reset 
bind = $mainMod, K, submap, reset 
bind = $mainMod, J, submap, reset 
bind = , H, layoutmsg, preselect l
bind = , L, layoutmsg, preselect r
bind = , K, layoutmsg, preselect u
bind = , J, layoutmsg, preselect d
bind = , H, submap, reset 
bind = , L, submap, reset 
bind = , K, submap, reset 
bind = , J, submap, reset 
bind = , escape, submap, reset 
bind = $mainMod, Y, submap, reset 
bind = , catchall, submap, reset
submap = reset


# Group
bind = $mainMod CTRL, G, submap, group
submap = group
bind = , G, lockactivegroup, toggle
bind = , left, movewindoworgroup, l
bind = , right, movewindoworgroup, r
bind = , up, movewindoworgroup, u
bind = , down, movewindoworgroup, d
bind = , H, movewindoworgroup, l
bind = , L, movewindoworgroup, r
bind = , K, movewindoworgroup, u
bind = , J, movewindoworgroup, d
bind = , G, submap, reset
bind = , left, submap, reset
bind = , right, submap, reset
bind = , up, submap, reset
bind = , down, submap, reset
bind = , H, submap, reset
bind = , L, submap, reset
bind = , K, submap, reset
bind = , J, submap, reset
bind = $mainMod CTRL, G, submap, reset
bind = , catchall, submap, reset
submap = reset




# Monitors
bind = $mainMod, code:48, submap, monitor
submap = monitor
bind = $mainMod, bracketright, focusmonitor, +1
bind = $mainMod, bracketleft, focusmonitor, -1
bind = $mainMod, H, focusmonitor, l
bind = $mainMod, L, focusmonitor, r
bind = $mainMod, K, focusmonitor, u
bind = $mainMod, J, focusmonitor, d

# Moves the active workspace to a monitor
bind = $mainMod SHIFT, bracketright, movecurrentworkspacetomonitor, mon:+1
bind = $mainMod SHIFT, bracketleft, movecurrentworkspacetomonitor, mon:-1
bind = $mainMod SHIFT, H, movecurrentworkspacetomonitor, mon:l
bind = $mainMod SHIFT, L, movecurrentworkspacetomonitor, mon:r
bind = $mainMod SHIFT, K, movecurrentworkspacetomonitor, mon:u
bind = $mainMod SHIFT, J, movecurrentworkspacetomonitor, mon:d

# moves the active window in a direction or to a monitor. For floating windows, moves the window to the screen edge in that direction
bind = $mainMod, period, movewindow, mon:+1
bind = $mainMod, comma, movewindow, mon:-1

# Focuses the requested workspace on the current monitor, swapping the current workspace to a different monitor if necessary. If you want XMonad/Qtile-style workspace switching, replace workspace in your config with this.
bind = $mainMod, 1, focusworkspaceoncurrentmonitor, 1
bind = $mainMod, 2, focusworkspaceoncurrentmonitor, 2
bind = $mainMod, 3, focusworkspaceoncurrentmonitor, 3
bind = $mainMod, 4, focusworkspaceoncurrentmonitor, 4
bind = $mainMod, 5, focusworkspaceoncurrentmonitor, 5
bind = $mainMod, 6, focusworkspaceoncurrentmonitor, 6
bind = $mainMod, 7, focusworkspaceoncurrentmonitor, 7
bind = $mainMod, 8, focusworkspaceoncurrentmonitor, 8
bind = $mainMod, 9, focusworkspaceoncurrentmonitor, 9
bind = $mainMod, 0, focusworkspaceoncurrentmonitor, 10

# Swaps the active workspaces between two monitors
bind = $mainMod CTRL, bracketright, swapactiveworkspaces, current +1
bind = $mainMod CTRL, bracketleft, swapactiveworkspaces, current -1

# submap reset
bind = $mainMod, bracketright, submap, reset
bind = $mainMod, bracketleft, submap, reset
bind = $mainMod, H, submap, reset
bind = $mainMod, L, submap, reset
bind = $mainMod, K, submap, reset
bind = $mainMod, J, submap, reset
bind = $mainMod SHIFT, bracketright, submap, reset
bind = $mainMod SHIFT, bracketleft, submap, reset
bind = $mainMod SHIFT, H, submap, reset
bind = $mainMod SHIFT, L, submap, reset
bind = $mainMod SHIFT, K, submap, reset
bind = $mainMod SHIFT, J, submap, reset
bind = $mainMod, period, submap, reset
bind = $mainMod, comma, submap, reset
bind = $mainMod, 1, submap, reset
bind = $mainMod, 2, submap, reset
bind = $mainMod, 3, submap, reset
bind = $mainMod, 4, submap, reset
bind = $mainMod, 5, submap, reset
bind = $mainMod, 6, submap, reset
bind = $mainMod, 7, submap, reset
bind = $mainMod, 8, submap, reset
bind = $mainMod, 9, submap, reset
bind = $mainMod, 0, submap, reset
bind = $mainMod CTRL, bracketright, submap, reset
bind = $mainMod CTRL, bracketleft, submap, reset
bind = , escape, submap, reset 
bind = $mainMod, code:48, submap, reset 
bind = , catchall, submap, reset
submap = reset
